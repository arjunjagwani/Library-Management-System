package com.basic.projects.LibraryManagementSystem.controllers;

import com.basic.projects.LibraryManagementSystem.models.Book;
import com.basic.projects.LibraryManagementSystem.services.BookService;
import org.apache.catalina.core.ApplicationContext;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller
public class BookController {
    @Autowired
    BookService bookService;
    ApplicationContext applicationContext;

    

    @GetMapping("/")
    public String getBooks(Model model){
    model.addAttribute("Books",bookService.getAllBooks());
        return "Books";
    }
    @GetMapping("/bookForm")
    public String bookForm(Model model){
        model.addAttribute("Books",new Book());
        return "book-form";
    }
    @GetMapping("/searchBooks")
    public String searchBooks(@RequestParam("query") String query, Model model) {
        List<Book> books = bookService.searchBooks(query);
        model.addAttribute("Books", books);
        return "Books"; // Returns the same page to display search results
    }

    @GetMapping("/{id}/updateBook")
    public String updateForm(Model model,@PathVariable long id){
        Book book=bookService.getBookById(id);
        model.addAttribute("book",book);
        return "book-update-form";
    }
    @PostMapping("/{id}/update")
    public String updateBook(@PathVariable long id,@RequestParam String title,@RequestParam String author,@RequestParam String genre,@RequestParam boolean avail_status){

        bookService.updateNewBook(id,title,author,genre,avail_status);
        return "redirect:/";
    }

    @PostMapping("/addBook")
    public String addStudents(@RequestParam Long id,@RequestParam String title,@RequestParam String author,@RequestParam String genre,@RequestParam String avail_status){

        bookService.addNewBook(id,title,author,genre,avail_status);
        return "redirect:/";

    }
    // Delete a book
    @GetMapping("/{id}/delete")
    public String deleteBook(@PathVariable long id) {

        bookService.deleteBook(id);
        return "redirect:/";
    }
}
